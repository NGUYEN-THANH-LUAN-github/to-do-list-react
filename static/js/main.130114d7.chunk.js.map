{"version":3,"sources":["components/Todo.js","components/Form.js","components/TodoList.js","App.js","index.js"],"names":["strikeitem","keyframes","TodoWrapper","styled","div","Todo","id","task","completed","remove","updateTodo","toggleCompletion","useState","isEditting","toggleEdit","taskEdit","setTaskEdit","onSubmit","e","preventDefault","type","value","onChange","target","className","checked","onClick","FormWrapper","form","Form","createTodo","state","setState","uuid","htmlFor","placeholder","TodoListWrapper","TodoList","todos","setTodos","updatedTask","map","todo","renderTodos","filter","newTodo","App","GlobalStyle","createGlobalStyle","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.130114d7.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport styled, { keyframes } from 'styled-components'\r\n\r\nconst strikeitem = keyframes`\r\n  to {\r\n    width: calc(100% + 1rem)\r\n  }\r\n`\r\n\r\nconst TodoWrapper = styled.div`\r\n  display: flex;\r\n  margin: 0 -3rem 4px;\r\n  padding: 1.1rem 3rem;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  background: rgba(255, 255, 255, 0.1);\r\n  li {\r\n    position: relative;\r\n    transition: opacity 0.4s linear;\r\n  }\r\n  li.completed {\r\n    opacity: 0.6;\r\n    &:before {\r\n      content: '';\r\n      position: absolute;\r\n      top: 50%;\r\n      left: -0.5rem;\r\n      display: block;\r\n      width: 0%;\r\n      height: 2px;\r\n      background: #fff;\r\n      animation: ${strikeitem} 0.5s ease-out 0s forwards;\r\n    }\r\n  }\r\n  .utils {\r\n    flex-shrink: 0;\r\n    padding-left: 0.7em;\r\n    input {\r\n      transform: scale(1.2);\r\n      margin-right: 10px;\r\n    }\r\n    button {\r\n      border: none;\r\n      font-size: 1em;\r\n      margin: 0.4em;\r\n      background: none;\r\n      -webkit-appearance: none;\r\n      cursor: pointer;\r\n      color: #fff;\r\n    }\r\n  }\r\n  form {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    input,\r\n    button {\r\n      font-family: 'Quicksand', sans-serif;\r\n      height: 2.2rem;\r\n    }\r\n    input {\r\n      flex-grow: 1;\r\n      border: none;\r\n      background: #f7f1f1;\r\n      padding: 0 1.5em;\r\n      font-size: initial;\r\n    }\r\n    button {\r\n      padding: 0 1.3rem;\r\n      border: none;\r\n      background: #ff6666;\r\n      color: white;\r\n      text-transform: uppercase;\r\n      font-weight: bold;\r\n      border: 1px solid rgba(255, 255, 255, 0.3);\r\n      margin-left: 10px;\r\n      cursor: pointer;\r\n      transition: background 0.2s ease-out;\r\n      &:hover {\r\n        filter: brightness(1.2);\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport default function Todo({\r\n  id,\r\n  task,\r\n  completed,\r\n  remove,\r\n  updateTodo,\r\n  toggleCompletion,\r\n}) {\r\n  const [isEditting, toggleEdit] = useState(false)\r\n  const [taskEdit, setTaskEdit] = useState(task)\r\n  const toggleForm = () => {\r\n    toggleEdit(!isEditting)\r\n  }\r\n  const handleUpdate = e => {\r\n    e.preventDefault()\r\n    updateTodo(id, taskEdit)\r\n    toggleEdit(!isEditting)\r\n  }\r\n  const handleChangeEdit = e => {\r\n    setTaskEdit(e.target.value)\r\n  }\r\n  let result\r\n  if (isEditting) {\r\n    result = (\r\n      <TodoWrapper>\r\n        <form onSubmit={handleUpdate}>\r\n          <input type='text' value={taskEdit} onChange={handleChangeEdit} />\r\n          <button>Save</button>\r\n        </form>\r\n      </TodoWrapper>\r\n    )\r\n  } else {\r\n    result = (\r\n      <TodoWrapper completed={completed}>\r\n        <li className={completed && 'completed'}>{task}</li>\r\n        <div className='utils'>\r\n          <input\r\n            type='checkbox'\r\n            onChange={toggleCompletion}\r\n            checked={completed}\r\n          />\r\n          <button onClick={toggleForm}>\r\n            <i className='fas fa-pen' />\r\n          </button>\r\n          <button onClick={remove}>\r\n            <i className='fas fa-trash' />\r\n          </button>\r\n        </div>\r\n      </TodoWrapper>\r\n    )\r\n  }\r\n  return result\r\n}\r\n","import React, { useState } from 'react'\r\nimport { v4 as uuid } from 'uuid'\r\nimport styled from 'styled-components'\r\n\r\nconst FormWrapper = styled.form`\r\n  margin-top: 3rem;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  label {\r\n    min-width: 100%;\r\n    margin-bottom: 0.5rem;\r\n    font-size: 1.3rem;\r\n  }\r\n  input,\r\n  button {\r\n    font-family: 'Quicksand', sans-serif;\r\n    height: 2.2rem;\r\n  }\r\n  input {\r\n    flex-grow: 1;\r\n    border: none;\r\n    background: #f7f1f1;\r\n    padding: 0 1.5rem;\r\n    font-size: initial;\r\n  }\r\n  button {\r\n    padding: 0 1.3rem;\r\n    border: none;\r\n    background: #ff6666;\r\n    color: white;\r\n    text-transform: uppercase;\r\n    font-weight: bold;\r\n    border: 1px solid rgba(255, 255, 255, 0.3);\r\n    margin-left: 10px;\r\n    cursor: pointer;\r\n    transition: background 5s ease-out;\r\n    &:hover {\r\n      filter: brightness(1.2);\r\n    }\r\n  }\r\n`\r\n\r\nexport default function Form({ createTodo }) {\r\n  const [state, setState] = useState({ task: '' })\r\n  const handleChange = e => {\r\n    setState({ task: e.target.value })\r\n  }\r\n  const handleSubmit = e => {\r\n    e.preventDefault()\r\n    createTodo({ ...state, id: uuid(), completed: false })\r\n    setState({ task: '' })\r\n  }\r\n  return (\r\n    <FormWrapper onSubmit={handleSubmit}>\r\n      <label htmlFor='task'>New Todo</label>\r\n      <input\r\n        type='text'\r\n        placeholder='New Todo'\r\n        id='task'\r\n        /* name='task' */\r\n        value={state.task}\r\n        onChange={handleChange}\r\n      />\r\n      <button>Add Todo</button>\r\n    </FormWrapper>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\nimport Todo from './Todo'\r\nimport Form from './Form'\r\nimport { v4 as uuid } from 'uuid'\r\nimport styled from 'styled-components'\r\n\r\nconst TodoListWrapper = styled.div`\r\n  margin: 4rem auto;\r\n  padding: 2rem 3rem 3rem;\r\n  max-width: 500px;\r\n  background: #ff6666;\r\n  color: #fff;\r\n  box-shadow: -20px -20px 0px 0px rgba(100, 100, 100, 0.1);\r\n  h1 {\r\n    font-weight: normal;\r\n    font-size: 2.6rem;\r\n    letter-spacing: 0.05em;\r\n    border-bottom: 1px solid rgba(255, 255, 255, 0.3);\r\n    span {\r\n      display: block;\r\n      font-size: 0.8rem;\r\n      margin: 0.2rem 0 0.7rem 3px;\r\n    }\r\n  }\r\n  ul {\r\n    margin-top: 2.6rem;\r\n    list-style: none;\r\n  }\r\n`\r\n\r\nexport default function TodoList() {\r\n  const [todos, setTodos] = useState([\r\n    { task: 'walk the fish', id: uuid(), completed: false },\r\n    { task: 'groom chickens', id: uuid(), completed: true },\r\n  ])\r\n  const createTodo = newTodo => {\r\n    setTodos([...todos, newTodo])\r\n  }\r\n  const remove = id => {\r\n    setTodos(todos.filter(todo => todo.id !== id))\r\n  }\r\n  const updateTodo = (id, updatedTask) => {\r\n    setTodos(\r\n      todos.map(todo =>\r\n        todo.id === id ? { ...todo, task: updatedTask } : todo\r\n      )\r\n    )\r\n  }\r\n  const toggleCompletion = id => {\r\n    setTodos(\r\n      todos.map(todo =>\r\n        todo.id === id ? { ...todo, completed: !todo.completed } : todo\r\n      )\r\n    )\r\n  }\r\n  const renderTodos = todos.map(todo => {\r\n    return (\r\n      <Todo\r\n        key={todo.id}\r\n        id={todo.id}\r\n        task={todo.task}\r\n        completed={todo.completed}\r\n        updateTodo={updateTodo}\r\n        remove={() => remove(todo.id)}\r\n        toggleCompletion={() => toggleCompletion(todo.id)}\r\n      />\r\n    )\r\n  })\r\n  return (\r\n    <TodoListWrapper>\r\n      <h1>\r\n        Todo List <span>A Simple React Todo List App</span>\r\n      </h1>\r\n      <ul>{renderTodos}</ul>\r\n      <Form createTodo={createTodo} />\r\n    </TodoListWrapper>\r\n  )\r\n}\r\n","import TodoList from './components/TodoList'\n\nfunction App() {\n  return (\n    <div>\n      <TodoList />\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport { createGlobalStyle } from 'styled-components'\n\nconst GlobalStyle = createGlobalStyle`\n  *, *::before, *::after {\n    box-sizing: border-box;\n    padding: 0;\n    margin: 0;\n  };\n  html,body{\n    background: linear-gradient(90deg,#69b7eb,#b3dbd3,#f4d6db);\n    font-size: 1.1rem;\n    font-family: 'Quicksand', sans-serif;\n    min-height: 100%;\n  }\n`\n\nReactDOM.render(\n  <React.StrictMode>\n    <GlobalStyle />\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}